create table users
(
  id bigint not null primary key generated by default as identity (start with 1, increment by 1),
  username varchar(64) not null,
  salt varchar(64) not null,
  password varchar(64) not null,
  email varchar(256),
  ctime datetime not null
);

create table auth_details
(
  user_id bigint not null,
  auth_token varchar(256) not null,
  api_secret varchar(256) not null,
  primary key(user_id, auth_token, api_secret),
  grouping foreign key (user_id) references users(id)
);

create table karma
(
  id bigint not null primary key generated by default as identity (start with 1, increment by 1),
  user_id bigint not null,
  amount int not null,
  ctime datetime not null,
  grouping foreign key (user_id) references users(id)
);

create table articles
(
  id bigint not null primary key generated by default as identity (start with 1, increment by 1),
  title varchar(256) not null,
  url varchar(256) not null,
  score  int not null,
  rank int not null,
  user_id bigint not null,
  ctime datetime not null,
  grouping foreign key (user_id) references users(id)
);

create table comments
(
  id bigint not null primary key generated by default as identity (start with 1, increment by 1),
  body blob not null,
  ctime datetime not null,
  parent_id bigint,
  user_id bigint not null,
  article_id bigint not null,
  deleted int not null default 0,
  grouping foreign key (user_id) references users(id)
);

create table votes
(
  id bigint not null primary key generated by default as identity (start with 1, increment by 1),
  vote int not null,
  user_id bigint not null,
  ctime datetime not null,
  grouping foreign key (user_id) references users(id)
);

create table comment_votes
(
  comment_id bigint not null,
  vote_id bigint not null
);

create table article_votes
(
  article_id bigint not null,
  vote_id bigint not null
);

create unique index username_idx on users(username);
